{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamlal/Desktop/verification/src/components/CertificateStatus/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport CertificateValidImg from \"../../assets/img/certificate-valid.svg\";\nimport CertificateInValidImg from \"../../assets/img/certificate-invalid.svg\";\nimport NextArrowImg from \"../../assets/img/next-arrow.svg\"; // import LearnProcessImg from \"../../assets/img/leanr_more_small.png\";\n// import FeedbackSmallImg from \"../../assets/img/feedback-small.png\";\n// import DownloadSmallImg from \"../../assets/img/download-certificate-small.png\";\n\nimport config from \"../../config\";\nimport { pathOr } from \"ramda\";\nimport { CustomButton } from \"../CustomButton\";\nimport { CertificateDetailsPaths } from \"../../constants\";\nimport { useDispatch } from \"react-redux\";\nimport { addEventAction, EVENT_TYPES } from \"../../redux/reducers/events\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ordinal_suffix_of } from \"../../utils/utils\";\nimport { Loader } from \"../Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst jsigs = require('jsonld-signatures');\n\nconst {\n  RSAKeyPair\n} = require('crypto-ld');\n\nconst {\n  documentLoaders\n} = require('jsonld');\n\nconst {\n  node: documentLoader\n} = documentLoaders;\n\nconst {\n  contexts\n} = require('security-context');\n\nconst credentialsv1 = require('../../utils/credentials.json');\n\nconst {\n  vaccinationContext,\n  vaccinationContextV2\n} = require('vaccination-context');\n\nconst customLoader = url => {\n  console.log(\"checking \" + url);\n  const c = {\n    \"did:india\": config.certificatePublicKey,\n    \"https://example.com/i/india\": config.certificatePublicKey,\n    \"https://w3id.org/security/v1\": contexts.get(\"https://w3id.org/security/v1\"),\n    'https://www.w3.org/2018/credentials#': credentialsv1,\n    \"https://www.w3.org/2018/credentials/v1\": credentialsv1,\n    \"https://cowin.gov.in/credentials/vaccination/v1\": vaccinationContext,\n    \"https://cowin.gov.in/credentials/vaccination/v2\": vaccinationContextV2\n  };\n  let context = c[url];\n\n  if (context === undefined) {\n    context = contexts[url];\n  }\n\n  if (context !== undefined) {\n    return {\n      contextUrl: null,\n      documentUrl: url,\n      document: context\n    };\n  }\n\n  if (url.startsWith(\"{\")) {\n    return JSON.parse(url);\n  }\n\n  console.log(\"Fallback url lookup for document :\" + url);\n  return documentLoader()(url);\n};\n\nexport const CertificateStatus = _ref => {\n  _s();\n\n  let {\n    certificateData,\n    goBack\n  } = _ref;\n  const [isLoading, setLoading] = useState(false);\n  const [isValid, setValid] = useState(false);\n  const [data, setData] = useState({});\n  const history = useHistory();\n  setTimeout(() => {\n    try {\n      axios.post(\"/divoc/api/v1/events/\", {\n        \"date\": new Date().toISOString(),\n        \"type\": \"verify\"\n      }).catch(e => {\n        console.log(e);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, 100);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLoading(true);\n\n    async function verifyData() {\n      try {\n        const signedJSON = JSON.parse(certificateData);\n        const publicKey = {\n          '@context': jsigs.SECURITY_CONTEXT_URL,\n          id: 'did:india',\n          type: 'RsaVerificationKey2018',\n          controller: 'https://cowin.gov.in/',\n          publicKeyPem: config.certificatePublicKey\n        };\n        const controller = {\n          '@context': jsigs.SECURITY_CONTEXT_URL,\n          id: 'https://cowin.gov.in/',\n          publicKey: [publicKey],\n          // this authorizes this key to be used for making assertions\n          assertionMethod: [publicKey.id]\n        };\n        const key = new RSAKeyPair({ ...publicKey\n        });\n        const {\n          AssertionProofPurpose\n        } = jsigs.purposes;\n        const {\n          RsaSignature2018\n        } = jsigs.suites;\n        const result = await jsigs.verify(signedJSON, {\n          suite: new RsaSignature2018({\n            key\n          }),\n          purpose: new AssertionProofPurpose({\n            controller\n          }),\n          documentLoader: customLoader,\n          compactProof: false\n        });\n\n        if (result.verified) {\n          const revokedResponse = await checkIfRevokedCertificate(signedJSON);\n\n          if (revokedResponse.response.status !== 200) {\n            console.log('Signature verified.');\n            setValid(true);\n            setData(signedJSON);\n            dispatch(addEventAction({\n              type: EVENT_TYPES.VALID_VERIFICATION,\n              extra: signedJSON.credentialSubject\n            }));\n            setLoading(false);\n            return;\n          }\n        }\n\n        dispatch(addEventAction({\n          type: EVENT_TYPES.INVALID_VERIFICATION,\n          extra: signedJSON\n        }));\n        setValid(false);\n        setLoading(false);\n      } catch (e) {\n        console.log('Invalid data', e);\n        setValid(false);\n        dispatch(addEventAction({\n          type: EVENT_TYPES.INVALID_VERIFICATION,\n          extra: certificateData\n        }));\n        setLoading(false);\n      }\n    }\n\n    setTimeout(() => {\n      verifyData();\n    }, 500);\n  }, []);\n\n  async function checkIfRevokedCertificate(data) {\n    return axios.post(\"/cert/api/certificate/revoked\", data).then(res => {\n      dispatch(addEventAction({\n        type: EVENT_TYPES.REVOKED_CERTIFICATE,\n        extra: certificateData\n      }));\n      return res;\n    }).catch(e => {\n      console.log(e);\n      return e;\n    });\n  }\n\n  function getCertificateStatusAsString(data) {\n    if (!data || !data[\"evidence\"]) {\n      return \"\";\n    }\n\n    return \"Certificate for COVID-19 Vaccination\";\n  }\n\n  function getDose(data) {\n    if (!data || !data[\"evidence\"]) {\n      return \"\";\n    }\n\n    if (parseInt(data[\"evidence\"][0][\"dose\"]) > parseInt(data[\"evidence\"][0][\"totalDoses\"])) {\n      return \"Precaution\";\n    }\n\n    return ordinal_suffix_of(data[\"evidence\"][0][\"dose\"]);\n  }\n\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"certificate-status-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: isValid ? CertificateValidImg : CertificateInValidImg,\n      alt: \"\",\n      className: \"certificate-status-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"certificate-status\",\n      children: isValid ? \"Certificate Successfully Verified\" : \"Certificate Invalid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), isValid && /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: getCertificateStatusAsString(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 28\n    }, this), isValid && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"mt-3\",\n      children: Object.keys(CertificateDetailsPaths).map((key, index) => {\n        const context = CertificateDetailsPaths[key];\n        const value = context.format(pathOr(\"NA\", context.path, data));\n        const show = value !== \"NA\" || value === \"NA\" && !context.optional;\n        return show && /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            fontSize: \"smaller\",\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pr-3\",\n            children: key.replace(\"${dose}\", getDose(data))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"font-weight-bolder value-col\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 39\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      className: \"blue-btn m-3\",\n      onClick: goBack,\n      children: \"Verify Another Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 12\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.cowin.gov.in\",\n        children: \"Please visit https://www.cowin.gov.in to get your latest dose certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 33\n  }, this);\n};\n\n_s(CertificateStatus, \"Ow9CcMCoi2tyLYIEj/kr99RvCQg=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = CertificateStatus;\nexport const SmallInfoCards = _ref2 => {\n  let {\n    text,\n    img,\n    onClick,\n    backgroundColor\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small-info-card-wrapper mt-3 mb-3\",\n    style: {\n      backgroundColor: backgroundColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50 \",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"\",\n        className: \"small-card-img float-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onClick,\n      className: \"w-50 d-flex flex-column align-items-start justify-content-center font-weight-bold\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: NextArrowImg,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SmallInfoCards;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CertificateStatus\");\n$RefreshReg$(_c2, \"SmallInfoCards\");","map":{"version":3,"sources":["/Users/shubhamlal/Desktop/verification/src/components/CertificateStatus/index.js"],"names":["React","useEffect","useState","config","pathOr","CustomButton","CertificateDetailsPaths","useDispatch","addEventAction","EVENT_TYPES","useHistory","axios","ordinal_suffix_of","Loader","jsigs","require","RSAKeyPair","documentLoaders","node","documentLoader","contexts","credentialsv1","vaccinationContext","vaccinationContextV2","customLoader","url","console","log","c","certificatePublicKey","get","context","undefined","contextUrl","documentUrl","document","startsWith","JSON","parse","CertificateStatus","certificateData","goBack","isLoading","setLoading","isValid","setValid","data","setData","history","setTimeout","post","Date","toISOString","catch","e","dispatch","verifyData","signedJSON","publicKey","SECURITY_CONTEXT_URL","id","type","controller","publicKeyPem","assertionMethod","key","AssertionProofPurpose","purposes","RsaSignature2018","suites","result","verify","suite","purpose","compactProof","verified","revokedResponse","checkIfRevokedCertificate","response","status","VALID_VERIFICATION","extra","credentialSubject","INVALID_VERIFICATION","then","res","REVOKED_CERTIFICATE","getCertificateStatusAsString","getDose","parseInt","CertificateValidImg","CertificateInValidImg","Object","keys","map","index","value","format","path","show","optional","fontSize","textAlign","replace","SmallInfoCards","text","img","onClick","backgroundColor","NextArrowImg"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./index.css\";\nimport CertificateValidImg from \"../../assets/img/certificate-valid.svg\";\nimport CertificateInValidImg from \"../../assets/img/certificate-invalid.svg\";\nimport NextArrowImg from \"../../assets/img/next-arrow.svg\";\n// import LearnProcessImg from \"../../assets/img/leanr_more_small.png\";\n// import FeedbackSmallImg from \"../../assets/img/feedback-small.png\";\n// import DownloadSmallImg from \"../../assets/img/download-certificate-small.png\";\nimport config from \"../../config\";\nimport {pathOr} from \"ramda\";\nimport {CustomButton} from \"../CustomButton\";\nimport {CertificateDetailsPaths} from \"../../constants\";\nimport {useDispatch} from \"react-redux\";\nimport {addEventAction, EVENT_TYPES} from \"../../redux/reducers/events\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {ordinal_suffix_of} from \"../../utils/utils\";\nimport {Loader} from \"../Loader\";\n\nconst jsigs = require('jsonld-signatures');\nconst {RSAKeyPair} = require('crypto-ld');\nconst {documentLoaders} = require('jsonld');\nconst {node: documentLoader} = documentLoaders;\nconst {contexts} = require('security-context');\nconst credentialsv1 = require('../../utils/credentials.json');\nconst {vaccinationContext, vaccinationContextV2} = require('vaccination-context');\n\nconst customLoader = url => {\n    console.log(\"checking \" + url);\n    const c = {\n        \"did:india\": config.certificatePublicKey,\n        \"https://example.com/i/india\": config.certificatePublicKey,\n        \"https://w3id.org/security/v1\": contexts.get(\"https://w3id.org/security/v1\"),\n        'https://www.w3.org/2018/credentials#': credentialsv1,\n        \"https://www.w3.org/2018/credentials/v1\": credentialsv1,\n        \"https://cowin.gov.in/credentials/vaccination/v1\": vaccinationContext,\n        \"https://cowin.gov.in/credentials/vaccination/v2\": vaccinationContextV2,\n    };\n    let context = c[url];\n    if (context === undefined) {\n        context = contexts[url];\n    }\n    if (context !== undefined) {\n        return {\n            contextUrl: null,\n            documentUrl: url,\n            document: context\n        };\n    }\n    if (url.startsWith(\"{\")) {\n        return JSON.parse(url);\n    }\n    console.log(\"Fallback url lookup for document :\" + url)\n    return documentLoader()(url);\n};\n\nexport const CertificateStatus = ({certificateData, goBack}) => {\n    const [isLoading, setLoading] = useState(false);\n    const [isValid, setValid] = useState(false);\n    const [data, setData] = useState({});\n    const history = useHistory();\n\n    setTimeout(()=>{\n        try {\n            axios\n              .post(\"/divoc/api/v1/events/\", {\"date\":new Date().toISOString(), \"type\":\"verify\"})\n              .catch((e) => {\n                console.log(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }, 100)\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        setLoading(true);\n        async function verifyData() {\n            try {\n                const signedJSON = JSON.parse(certificateData);\n                const publicKey = {\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\n                    id: 'did:india',\n                    type: 'RsaVerificationKey2018',\n                    controller: 'https://cowin.gov.in/',\n                    publicKeyPem: config.certificatePublicKey\n                };\n                const controller = {\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\n                    id: 'https://cowin.gov.in/',\n                    publicKey: [publicKey],\n                    // this authorizes this key to be used for making assertions\n                    assertionMethod: [publicKey.id]\n                };\n                const key = new RSAKeyPair({...publicKey});\n                const {AssertionProofPurpose} = jsigs.purposes;\n                const {RsaSignature2018} = jsigs.suites;\n                const result = await jsigs.verify(signedJSON, {\n                    suite: new RsaSignature2018({key}),\n                    purpose: new AssertionProofPurpose({controller}),\n                    documentLoader: customLoader,\n                    compactProof: false\n                });\n                if (result.verified) {\n                    const revokedResponse = await checkIfRevokedCertificate(signedJSON)\n                    if (revokedResponse.response.status !== 200) {\n                        console.log('Signature verified.');\n                        setValid(true);\n                        setData(signedJSON);\n                        dispatch(addEventAction({\n                            type: EVENT_TYPES.VALID_VERIFICATION,\n                            extra: signedJSON.credentialSubject\n                        }));\n                        setLoading(false);\n                        return;\n                    }\n                }\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: signedJSON}));\n                setValid(false);\n                setLoading(false);\n            } catch (e) {\n                console.log('Invalid data', e);\n                setValid(false);\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: certificateData}));\n                setLoading(false);\n            }\n\n        }\n        setTimeout(() => {\n            verifyData()\n        }, 500)\n\n    }, []);\n\n    async function checkIfRevokedCertificate(data) {\n        return axios\n            .post(\"/cert/api/certificate/revoked\", data)\n            .then((res) => {\n                dispatch(addEventAction({type: EVENT_TYPES.REVOKED_CERTIFICATE, extra: certificateData}));\n                return res\n            }).catch((e) => {\n                console.log(e);\n                return e\n            });\n    }\n\n    function getCertificateStatusAsString(data) {\n        if (!data || !data[\"evidence\"]) {\n            return \"\"\n        }\n        return \"Certificate for COVID-19 Vaccination\"\n    }\n\n    function getDose(data) {\n        if (!data || !data[\"evidence\"]) {\n            return \"\"\n        }\n\n        if(parseInt(data[\"evidence\"][0][\"dose\"]) > parseInt(data[\"evidence\"][0][\"totalDoses\"])){\n            return \"Precaution\"\n        }\n        \n        return ordinal_suffix_of(data[\"evidence\"][0][\"dose\"])\n    }\n\n    return (\n        isLoading ? <Loader/> : <div className=\"certificate-status-wrapper\">\n            <img src={isValid ? CertificateValidImg : CertificateInValidImg} alt={\"\"}\n                 className=\"certificate-status-image\"/>\n            <h3 className=\"certificate-status\">\n                {\n                    isValid ? \"Certificate Successfully Verified\" : \"Certificate Invalid\"\n                }\n            </h3>\n            <br/>\n            {\n                isValid && <h5>\n                    {\n                        getCertificateStatusAsString(data)\n                    }\n                </h5>\n            }\n            {\n                isValid && <table className=\"mt-3\">\n                    {\n                        Object.keys(CertificateDetailsPaths).map((key, index) => {\n                            const context = CertificateDetailsPaths[key];\n                            const value = context.format(pathOr(\"NA\", context.path, data));\n                            const show = value !== \"NA\" || (value === \"NA\" && !context.optional)\n                            return (\n                              show && <tr key={index} style={{fontSize:\"smaller\", textAlign: \"left\"}}>\n                                    <td className=\"pr-3\" >{key.replace(\"${dose}\", getDose(data))}</td>\n                                    <td className=\"font-weight-bolder value-col\">{value}</td>\n                                </tr>\n                            )\n                        })\n                    }\n\n                </table>\n            }\n            <br/>\n            <CustomButton className=\"blue-btn m-3\" onClick={goBack}>Verify Another Certificate</CustomButton>\n           <br/>\n           {\n                !isValid && <h5>\n                    {\n                         <a href= 'https://www.cowin.gov.in'>Please visit https://www.cowin.gov.in to get your latest dose certificate</a>\n                    }\n                </h5>\n            }\n           \n            {/*<SmallInfoCards text={\"Provide Feedback\"}*/}\n            {/*                onClick={() => {*/}\n            {/*                    history.push(\"/side-effects\")*/}\n            {/*                }}*/}\n            {/*                img={FeedbackSmallImg} backgroundColor={\"#FFFBF0\"}/>*/}\n            {/*<SmallInfoCards text={\"Learn about the Vaccination process\"} img={LearnProcessImg}*/}\n            {/*               onClick={() => {*/}\n            {/*                    history.push(\"/learn\")*/}\n            {/*                }}*/}\n            {/*                backgroundColor={\"#EFF5FD\"}/>*/}\n        </div>\n    )\n};\n\nexport const SmallInfoCards = ({text, img, onClick, backgroundColor}) => (\n    <div className=\"small-info-card-wrapper mt-3 mb-3\" style={{backgroundColor: backgroundColor}}>\n        <div className=\"w-50 \">\n            <img src={img} alt={\"\"} className=\"small-card-img float-right\"/>\n        </div>\n        <div onClick={onClick}\n             className=\"w-50 d-flex flex-column align-items-start justify-content-center font-weight-bold\">\n            <span>{text}</span>\n            <img src={NextArrowImg} alt={\"\"}/>\n        </div>\n    </div>\n);\n"]},"metadata":{},"sourceType":"module"}