{"ast":null,"code":"/*!\n * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class LinkedDataProof {\n  constructor() {\n    let {\n      type\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof type !== 'string') {\n      throw new TypeError('A LinkedDataProof must have a \"type\".');\n    }\n\n    this.type = type;\n  }\n  /**\n   * @param document {object} to be signed.\n   * @param purpose {ProofPurpose}\n   * @param documentLoader {function}\n   * @param expansionMap {function}\n   * @param compactProof {boolean}\n   *\n   * @returns {Promise<object>} Resolves with the created proof object.\n   */\n\n\n  async createProof(_ref) {\n    let {\n      document,\n      purpose,\n      documentLoader,\n      expansionMap,\n      compactProof\n    } = _ref;\n    throw new Error('\"createProof\" must be implemented in a derived class.');\n  }\n  /**\n   * @param proof {object} the proof to be verified.\n   * @param document {object} the document the proof applies to.\n   * @param purpose {ProofPurpose}\n   * @param documentLoader {function}\n   * @param expansionMap {function}\n   *\n   * @returns {Promise<{object}>} Resolves with the verification result.\n   */\n\n\n  async verifyProof(_ref2) {\n    let {\n      proof,\n      document,\n      purpose,\n      documentLoader,\n      expansionMap\n    } = _ref2;\n    throw new Error('\"verifyProof\" must be implemented in a derived class.');\n  }\n  /**\n   * @param proof {object} the proof to be matched.\n   * @param document {object} the document the proof applies to.\n   * @param purpose {ProofPurpose}\n   * @param documentLoader {function}\n   * @param expansionMap {function}\n   *\n   * @returns {Promise<{boolean}>} Resolves with the verification result.\n   */\n\n\n  async matchProof(_ref3) {\n    let {\n      proof,\n      document,\n      purpose,\n      documentLoader,\n      expansionMap\n    } = _ref3;\n    return proof.type === this.type;\n  }\n\n};","map":{"version":3,"sources":["/Users/shubhamlal/Desktop/verification/node_modules/jsonld-signatures/lib/suites/LinkedDataProof.js"],"names":["module","exports","LinkedDataProof","constructor","type","TypeError","createProof","document","purpose","documentLoader","expansionMap","compactProof","Error","verifyProof","proof","matchProof"],"mappings":"AAAA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,eAAN,CAAsB;AACrCC,EAAAA,WAAW,GAAc;AAAA,QAAb;AAACC,MAAAA;AAAD,KAAa,uEAAJ,EAAI;;AACvB,QAAG,OAAOA,IAAP,KAAgB,QAAnB,EAA6B;AAC3B,YAAM,IAAIC,SAAJ,CAAc,uCAAd,CAAN;AACD;;AACD,SAAKD,IAAL,GAAYA,IAAZ;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACmB,QAAXE,WAAW,OACkD;AAAA,QAAjE;AAACC,MAAAA,QAAD;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,cAApB;AAAoCC,MAAAA,YAApC;AAAkDC,MAAAA;AAAlD,KAAiE;AACjE,UAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACmB,QAAXC,WAAW,QAA2D;AAAA,QAA1D;AAACC,MAAAA,KAAD;AAAQP,MAAAA,QAAR;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA,cAA3B;AAA2CC,MAAAA;AAA3C,KAA0D;AAC1E,UAAM,IAAIE,KAAJ,CAAU,uDAAV,CAAN;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACkB,QAAVG,UAAU,QAA2D;AAAA,QAA1D;AAACD,MAAAA,KAAD;AAAQP,MAAAA,QAAR;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA,cAA3B;AAA2CC,MAAAA;AAA3C,KAA0D;AACzE,WAAOI,KAAK,CAACV,IAAN,KAAe,KAAKA,IAA3B;AACD;;AA9CoC,CAAvC","sourcesContent":["/*!\n * Copyright (c) 2018 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class LinkedDataProof {\n  constructor({type} = {}) {\n    if(typeof type !== 'string') {\n      throw new TypeError('A LinkedDataProof must have a \"type\".');\n    }\n    this.type = type;\n  }\n\n  /**\n   * @param document {object} to be signed.\n   * @param purpose {ProofPurpose}\n   * @param documentLoader {function}\n   * @param expansionMap {function}\n   * @param compactProof {boolean}\n   *\n   * @returns {Promise<object>} Resolves with the created proof object.\n   */\n  async createProof(\n    {document, purpose, documentLoader, expansionMap, compactProof}) {\n    throw new Error('\"createProof\" must be implemented in a derived class.');\n  }\n\n  /**\n   * @param proof {object} the proof to be verified.\n   * @param document {object} the document the proof applies to.\n   * @param purpose {ProofPurpose}\n   * @param documentLoader {function}\n   * @param expansionMap {function}\n   *\n   * @returns {Promise<{object}>} Resolves with the verification result.\n   */\n  async verifyProof({proof, document, purpose, documentLoader, expansionMap}) {\n    throw new Error('\"verifyProof\" must be implemented in a derived class.');\n  }\n\n  /**\n   * @param proof {object} the proof to be matched.\n   * @param document {object} the document the proof applies to.\n   * @param purpose {ProofPurpose}\n   * @param documentLoader {function}\n   * @param expansionMap {function}\n   *\n   * @returns {Promise<{boolean}>} Resolves with the verification result.\n   */\n  async matchProof({proof, document, purpose, documentLoader, expansionMap}) {\n    return proof.type === this.type;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}